# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build-project:
    name: Build project
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
       os: [ubuntu-latest]
       version: [3.7, 3.8]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python 3.7
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
          name: BitcoinTrading_artifact
          path: ./
  run-tests:
      name: run-tests
      runs-on: ubuntu-latest 
      needs: build-project
      steps:

      - name: Download artifact for tests
        uses: actions/download-artifact@v3
        with:
          name: BitcoinTrading_artifact
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run unittests
        run: 
          cd NewBitcoinTrades
          
          pytest
      - name: Test with chispa
        run: 
          cd NewBitcoinTrades
          
          python3 BitcoinTradingRun.py TestCase1_dataset_one.csv TestCase1_dataset_two.csv France OutputTestCase1
          
          python3 TestOutput.py OutputTestCase1.csv TestCase1_expected.csv
  release-project:
    name: Release project
    runs-on: ubuntu-latest 
    needs: run-tests
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: BitcoinTrading_artifact
    - name: Test artifact download     
      run: ls -R  
